spring.application.name=cv

server.port=9000

endpoint.prefix = api/

spring.datasource.url= jdbc:postgresql://localhost:5432/cv
spring.datasource.username= cv_db
spring.datasource.password= admin
spring.jpa.database-platform= postgres

spring.jpa.show-sql = true
logging.level.org.hibernate.SQL=error
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = false
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
logging.level.org.apache.http=DEBUG
spring.jpa.hibernate.ddl-auto=update



# Keycloak Configuration
app.keycloak.auth-server-url=http://localhost:8080
app.keycloak.realm=cv
app.keycloak.client-id=cv-bff
#app.keycloak.client-secret=your-client-secret
app.keycloak.uri-token=${app.keycloak.auth-server-url}/realms/${app.keycloak.realm}/protocol/openid-connect/token
app.keycloak.uri-user-info=${app.keycloak.auth-server-url}/realms/${app.keycloak.realm}/protocol/openid-connect/userinfo
app.keycloak.admin-user=cv-admin
app.keycloak.admin-password=123456
app.keycloak.client-uuid=1391b480-80e1-46b0-a71f-91564545181d

app.keycloak.uri-users=${app.keycloak.auth-server-url}/admin/realms/${app.keycloak.realm}/users
#in app.keycloak.uri-users-assign-role format the value %s with userID
app.keycloak.uri-users-assign-role=${app.keycloak.uri-users}/%s/role-mappings/clients/${app.keycloak.client-uuid}
app.keycloak.uri-roles=${app.keycloak.auth-server-url/}admin/realms/${app.keycloak.realm}/clients/${app.keycloak.client-uuid}/roles




spring.security.oauth2.resourceserver.jwt.issuer-uri= ${app.keycloak.auth-server-url}/realms/${app.keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri= ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
logging.level.org.springframework.security=DEBUG
